//アプリ訴求枠
$(function() {
	$('.appClose').click(function(){
	   $('.appDownload').hide();
	   $('.pulldown').css('top','60px');
	   $('.langPulldown').css('top','60px');
	   //$('.pulldown .closeWrap').css('padding-bottom','90px');
   	});
});

$("p").find("span").css('color','red');

//Train Info
var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
$(window).ready(function() {
	if ( w < 640 ) {
		$('#trainInfo').flexslider({
			animation: "slide",
			animationLoop: false,
			slideshow: false,
			controlNav:false,
			itemWidth: 300,
			itemMargin: 20,
			prevText: "",  
			nextText: ""
		});
		//列車情報3つより多くなった場合は左右ナビを出す
		if ($('#trainInfo ul.slides li').length > 3) {
			$('.flex-direction-nav').css('display','block');
		} else {
			$('.flex-direction-nav').css('display','none');
		}
	}
});

//what's New
$(window).on('load',function(){
	$(".tab li").click(function() {
		var index = $(".tab li").index(this);
		$(".whatsnewContent > li").css("display","none");
		$(".whatsnewContent > li").eq(index).css("display","block");
		$(".tab li").removeClass('selected');
		$(this).addClass("selected")
	});
});

//スマホスライダー
$(window).ready(function() {	
  $('.spmv').flexslider({
    animation: "slide",
	controlNav: true,
	slideshowSpeed: 3000,
    animationDuration: 500,
	prevText: "",
	nextText: ""
  });
});



//video modalwindow
$(function(){
	var dh = $(document).outerHeight(true);
	$('a.mw').on('click', function(){
		var href = $(this).attr('href');
		if( href.indexOf('youtube') > -1 ){
			$('#modalBox').append('<iframe src="'+ href +'" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>');
		} else if( href.indexOf('.png') > -1 || href.indexOf('.jpg') > -1 ){
			$('#modalBox').append('<p style="background-image: url('+ href +');"></p>');
		}
		wr = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
		var movh = wr * 0.5625;
		if( wr < 751 ){
			$('#modalBox iframe').css({
				'margin-top': '-'+ movh / 2 +'px',
				'margin-left': '-'+ (wr / 2) +'px',
				'height': movh
			});
		}
		$('#modal').css({
			'display': 'block',
			'height': dh
		});
		return false;
	});
	$('#modalBox').on('click', function(){
		$('#modal').hide();
		$('#modalBox').children('iframe').remove();
		$('#modalBox').children('p').remove();
	});



	var $window = $(window),
	$html = $('html'),
	$body = $('body'),
	$overlay = $('.modal_overlay'),
	scrollbar_width = window.innerWidth - document.body.scrollWidth,
	touch_start_y;
	// タッチしたとき開始位置を保存しておく(iOS)
	$window.on('touchstart', function (event) {
		touch_start_y = event.originalEvent.changedTouches[0].screenY;
	});

	// 該当ボタン(detail)クリック
	$('.detail').off('click');
	$('.detail').on('click', function() {
		// スワイプしているとき
		$window.on('touchmove.noscroll', function(event) {
		var overlay = $overlay[0],
			current_y = event.originalEvent.changedTouches[0].screenY,
			height = $overlay.outerHeight(),
			is_top = touch_start_y <= current_y && overlay.scrollTop === 0,
			is_bottom = touch_start_y >= current_y && overlay.scrollHeight - overlay.scrollTop === height;
			// スクロール対応モーダルの上端または下端のとき
			if (is_top || is_bottom) {
				// スクロール禁止
				event.preventDefault();
			}
		});
		// スクロール禁止
		$('html, body').css('overflow', 'hidden');

		if (scrollbar_width) {
			$html.css('padding-right', scrollbar_width);
		}
		// モーダルをフェードイン
		let modalContets = $(this).parent().next('.modal').clone();
		$('.modal_inner').append(modalContets);
		console.log('fadeIn直前');
		$overlay.fadeIn(300);
		console.log('fadeIn直後');

		// モーダルを閉じる処理
		var closeModal = function() {
			$body.removeAttr('style');
			$window.off('touchmove.noscroll');
			// モーダルをフェードアウト
			$overlay.animate({
				opacity: 0
			}, 300, function() {
				// モーダルを一番上にスクロールしておく
				$overlay.scrollTop(0).hide().removeAttr('style');
				$html.removeAttr('style');
			});
			$('.modal_inner').empty()
		};
		// オーバーレイをクリック
		$overlay.off('click');
		$overlay.on('click', function(event) {
			// モーダルの領域外をクリックで閉じる
			if (!$(event.target).closest('.modal').length) {
				closeModal();
			}
		});
		// 閉じるボタンクリックでモーダルを閉じる
		$('.modal_close').on('click', function() {
			closeModal();
		});
	});
});




